@page "/add"
@using BlazorApp1.Shared;
@inject HttpClient Http
@inject NavigationManager Navigation
@using Microsoft.Extensions.Logging
@inject ILogger<Contact> Logger
@inject IJSRuntime JsRuntime

<h3>Agregar Contacto</h3>

<EditForm Model="@_contact" OnValidSubmit="Post">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label>Nombre de Contacto: </label>
        <InputTextArea @bind-Value="_contact.name" />
        <ValidationMessage For= "@(() => _contact.name)"/>
    </div>
    <div class="form-group">
        <label>Telefono de Contacto</label>
        <InputTextArea @bind-Value="_contact.phone"/>
        <ValidationMessage For= "@(() => _contact.phone)"/>
    </div>
    <div class="form-group">
        <label>Celular de Contacto</label>
        <InputTextArea @bind-Value="_contact.cellphone"/>
        <ValidationMessage For= "@(() => _contact.cellphone)"/>
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-success" value="Agregar Contacto" />
    </div>
</EditForm>

<div class="alert alert-secondary mt-4">
        <span class="oi oi-person me-2" aria-hidden="true"></span>
    <strong>Informaci√≥n del Mensaje</strong><br><br>
    <span class="text-nowrap">
    <p>Mensaje: @message</p>
    </span>
</div>
@code {
    private Contact _contact = new();
    private string message = "";

    private async Task Post(){
        isExist(_contact.name);
        if(validateInfo()){
            await Http.PostAsJsonAsync<Contact>("/api/Contact", _contact);
            if(message != "El contacto ya existe"){
                message = "Contacto Agregado Correctamente";
            }     
        }else{
            message = "Los datos solicitados se encuentran vacios";
        }        
        await JsRuntime.InvokeVoidAsync("alert", message);
        Navigation.NavigateTo($"/listContact");
    }

    private bool validateInfo(){
        if(_contact.name == null || _contact.name == " "){
            return false;
        }else if(_contact.phone == null || _contact.phone == " "){
            return false;
        }else if(_contact.cellphone == null || _contact.cellphone == " "){
            return false;
        }
        return true;
    }

    private async void isExist(string name){
        bool contactRes = await Http.GetFromJsonAsync<bool>($"/api/Contact/isExist/{name}");
        if(contactRes==true){
            message = "El contacto ya existe";
        }
    }
}