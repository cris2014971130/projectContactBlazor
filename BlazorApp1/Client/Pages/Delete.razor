@page "/delete"
@using BlazorApp1.Shared;
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

<h3>Eliminar Contacto</h3>

<EditForm Model="@_contact" >
    <div class="form-group">
        <label>Nombre Contacto: </label>
        <InputText @bind-Value="name" />
        <button type="submit" class="btn btn-success" @onclick="(() => deleteByName(name))">Eliminar Contacto</button>
    </div>

    <div class="alert alert-secondary mt-4">
        <span class="oi oi-person me-2" aria-hidden="true"></span>
    <strong>Información del Mensaje</strong><br><br>
    <span class="text-nowrap">
    <p>Mensaje: @message</p>
    </span>

</div>
</EditForm>

@code {
    private Contact _contact = new();
    private string message;
    private string name;

    private async Task deleteByName(string name){
        if(validateInfo(name)){
            _contact = await Http.GetFromJsonAsync<Contact>($"/api/Contact/{name}");
            if(_contact.name != null){
                var contactRes = await Http.PostAsJsonAsync<Contact>($"/api/Contact/delete/",_contact);     
                message = getInfo(contactRes); 
            }else{
                 await JsRuntime.InvokeVoidAsync("alert", "No se encontro el contacto buscado");
            }  
        }else{
            message = "No ha completado la información correctamente";
        }
             
    }

    private bool validateInfo(string name){
        if(name == null || name == ""){
            return false;
        }
        return true;
    }

    private string getInfo(HttpResponseMessage message){
        this.message = message.ToString();
        if(message.ReasonPhrase.Equals("OK")){
            return "El contacto fue eliminado correctamente";
        }
        return "Error al eliminar el contacto";
    }
}